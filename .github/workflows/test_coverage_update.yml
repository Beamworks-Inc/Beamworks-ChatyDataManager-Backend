# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Spring/Kotlin Coverage Test on main

on:
  push:
    branches: [ "main","dev","release" ]
  pull_request:
    branches: [ "main","dev","release" ]

permissions:
  contents: write

jobs:
  test:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'

    - name: Create Generated-Snippets Directory
      run: mkdir -p /home/runner/work/Beamworks-Platform-Backend/Beamworks-Platform-Backend/build/generated-snippets
        
    - name: Setup Gradle
      uses: gradle/gradle-build-action@v2

    - name: Build with Gradle
      uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1
      with:
        arguments: build
    
    - name: Test with Gradle
      uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1
      with:
        arguments: test

    - name: Create Test Coverage Report
      uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1
      with:
        arguments: jacocoTestReport
      
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3.1.1
      with:
        file: ./build/reports/jacoco/test/jacocoTestReport.xml
      

